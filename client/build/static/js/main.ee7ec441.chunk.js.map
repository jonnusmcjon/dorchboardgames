{"version":3,"sources":["images/bannerimage.jpg","App.js","reportWebVitals.js","index.js"],"names":["App","StyleSheet","create","heroHeaderImage","height","width","state","response","axios","get","then","res","data","setState","className","src","bannerUri","Container","Row","xs","Col","sm","md","Card","body","outline","color","CardBody","CardTitle","tag","CardText","Button","CardImg","bottom","alt","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAAe,MAA0B,wC,OCuE1BA,GA/DAC,IAAWC,OAAO,CAC/BC,gBAAiB,CACfC,OAAQ,GACRC,MAAO,O,4MAKTC,MAAQ,CACNC,SAAU,I,uDAGZ,WAAqB,IAAD,OAClBC,IAAMC,IAAI,yBAAyBC,MAAK,SAACC,GACvC,IAAMJ,EAAWI,EAAIC,KACrB,EAAKC,SAAS,CAACN,kB,oBAInB,WACE,OACE,gCACA,sBAAKO,UAAU,YAAf,UACE,qBAAKC,IAAKC,EAAWF,UAAU,mBAC/B,oBAAIA,UAAU,MAAd,uCAEF,sBAAMA,UAAU,UAAhB,UACA,cAACG,EAAA,EAAD,CAAWH,UAAU,mBAArB,SACE,eAACI,EAAA,EAAD,CAAKC,GAAG,KAAR,UAEE,cAACC,EAAA,EAAD,CAAKD,GAAG,KAAKE,GAAG,IAAIC,GAAG,IAAvB,SACE,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,UAAzB,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,mBACA,cAACC,EAAA,EAAD,qKACA,cAACC,EAAA,EAAD,CAAQL,MAAM,YAAd,uBAEF,cAACM,EAAA,EAAD,CAASC,QAAM,EAAC5B,MAAM,OAAOU,IAAI,sBAAsBmB,IAAI,wBAI/D,cAACd,EAAA,EAAD,CAAKD,GAAG,KAAKE,GAAG,IAAIC,GAAG,IAAvB,SACE,eAACC,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,UAAzB,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,IAAI,KAAf,kBACA,eAACC,EAAA,EAAD,qGAAiG,uBAAK,uBAAtG,gFAGA,cAACC,EAAA,EAAD,CAAQL,MAAM,YAAd,wBAEF,cAACM,EAAA,EAAD,CAASC,QAAM,EAAC5B,MAAM,OAAOU,IAAI,sBAAsBmB,IAAI,6BAKnE,8BAAK,6BAAKC,KAAK7B,MAAMC,SAASiB,YAE9B,iE,GAlDYY,cCHHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ee7ec441.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bannerimage.2d4a94d5.jpg\";","import React, { Component } from 'react';\nimport { Card, Button, CardTitle, CardText, CardBody, CardImg, Row, Col, Container } from 'reactstrap';\nimport { Image, StyleSheet, View } from \"react-native\";\nimport './App.css';\nimport axios from 'axios';\n\nimport bannerUri from \"./images/bannerimage.jpg\";\n\nconst styles = StyleSheet.create({\n  heroHeaderImage: {\n    height: 80,\n    width: 100\n  }\n});\n\nclass App extends Component {\n  state = {\n    response: {}\n  };\n  \n  componentDidMount() {\n    axios.get('/api/v1/say-something').then((res) => {\n      const response = res.data;\n      this.setState({response});\n    });\n  }\n\n  render() {\n    return (\n      <div>\n      <div className=\"AppHeader\">\n        <img src={bannerUri} className=\"AppHeaderImage\"/>\n        <h1 className=\"App\">Dorchester Board Games</h1>\n        </div>\n      <div  className=\"AppBody\">\n      <Container className=\"themed-container\">\n        <Row xs=\"10\">\n          {/* First Card */}\n          <Col xs=\"12\" sm=\"6\" md=\"4\">\n            <Card body outline color=\"primary\">\n              <CardBody>\n                <CardTitle tag=\"h3\">What?</CardTitle>\n                <CardText>We're a group of board gamers based in Dorchester, UK who meet up on a weekly basis at our friendly pub to play and share some of our favourite games.</CardText>\n                <Button color=\"secondary\">Button</Button>\n              </CardBody>\n              <CardImg bottom width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n            </Card>\n          </Col>\n          {/* Second Card */}\n          <Col xs=\"12\" sm=\"6\" md=\"4\">\n            <Card body outline color=\"primary\">\n              <CardBody>\n                <CardTitle tag=\"h3\">How?</CardTitle>\n                <CardText>We all bring along a game or two (or five!) to play, and form into groups to play them.<br/><br/>\n\nCheck out our library of games to see what we've played (or want to play!)</CardText>\n                <Button color=\"secondary\">Library</Button>\n              </CardBody>\n              <CardImg bottom width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      <div><h1>{this.state.response.body}</h1></div>\n      </div>\n      <small>Copyright jonnus-2021</small>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}